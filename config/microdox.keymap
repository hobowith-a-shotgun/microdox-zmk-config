/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        behaviors {
                hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                quick_tap_ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
                };
        };

        combos {
                compatible = "zmk,combos";
                combo_esc {
                        timeout-ms = <75>;
                        key-positions = <0 1>;
                        bindings = <&kp ESC>;
                };
                combo_bksp {
                        timeout-ms = <75>;
                        key-positions = <8 9>;
                        bindings = <&kp BSPC>;
                };
                combo_entr {
                        timeout-ms = <75>;
                        key-positions = <28 29>;
                        bindings = <&kp RET>;
                };
                combo_tab {
                        timeout-ms = <75>;
                        key-positions = <20 21>;
                        bindings = <&kp TAB>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T   |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G   |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B   |   |  N  |  M   |  ,  |  .  |  /  |
//             | GUI | NAV | SHFT |   | SPC | SYM  | ALT |
                        bindings = <
   &kp Q      &kp W      &kp F       &kp P       &kp B   &kp J &kp L        &lt 2 U        &lt 3 Y        &kp SINGLE_QUOTE
   &hm LGUI A &hm LALT R &hm LCTRL S &hm LSHFT T &kp G   &kp M &hm RSHFT N  &hm RCTRL E   &hm RALT I   &hm RGUI O
   &kp Z      &kp X      &kp C       &kp D       &kp V   &kp K &kp H        &kp COMMA     &kp DOT      &kp FSLH
          &kp ESC &lt 1 SPACE &kp TAB &lt 2 RET &lt 3 BSPC &kp RALT
                        >;
                };
                nav_layer {
// -----------------------------------------------------------------------------------------
// |BTCLR|     | ESC |  ~   |     |   | TAB | HOME |  UP  | END | DEL  |
// | BT1 | GUI | ALT | CTRL | NUM |   |  /  | LEFT | DOWN | RGT | BKSP |
// | BT2 |     |     |      |     |   |  \  | ENT  |      |     |      |
//             |     |      |     |   |     |      |      |
                        bindings = <
   &bt BT_CLR   &bt BT_SEL 0      &bt BT_SEL 1  &none     &none     &kp TAB  &kp HOME &kp PRINTSCREEN   &kp END   &kp DEL
   &kp LGUI     &kp LALT          &kp LCTRL     &kp LSHFT &none     &none &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT
   &none        &none             &none         &none     &none     &none &kp C_VOL_DN &kp PG_DN &kp PG_UP    &kp C_VOL_UP
                            &none   &none    &none        &trans   &trans   &trans
                        >;
                };

                sym_layer {
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
// |     |     |     |     |     |   |  -  |  =  |  {  |  }  | "|" |
// |     |     |     |     |     |   |  _  |  +  |  [  |  ]  |  \  |
//             | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp LBRC    &kp AMPS    &kp ASTRK      &kp LPAR    &kp RBRC        &none        &none        &none        &none        &kp BACKSPACE
   &kp COLON    &kp DOLLAR  &kp PERCENT    &kp CARET   &kp PLUS        &none        &kp RSHFT    &kp RCTRL    &kp RALT     &kp RGUI
   &kp TILDE   &kp EXCL    &kp AT         &kp HASH    &kp PIPE        &none        &none        &none        &none        &none
                                &kp LPAR      &kp RPAR       &kp UNDER   &trans   &trans    &trans
                        >;
                };

// This layer is unreachable until "tri layer state" is sorted out.
// Leaving it here for completeness.
                num_layer {
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |   |  A  |  7  |  8  |  9  |  D  |
// |     |     |     |     |     |   |  B  |  4  |  5  |  6  |  E  |
// |     |     |     |     |     |   |  C  |  1  |  2  |  3  |  F  |
//             |     |     |     |   |  0  |  .  |     |
                        bindings = <
   &kp LBKT    &kp N7    &kp N8    &kp N9    &kp RBKT    &none        &none        &none        &none        &none
   &kp SEMI    &kp N4    &kp N5    &kp N6    &kp EQUAL   &none        &kp RSHFT    &kp RCTRL    &kp RALT     &kp RGUI
   &kp GRAVE   &kp N1    &kp N2    &kp N3    &kp BSLH    &none        &none        &none        &none        &none
                 &kp DOT      &kp N0       &kp MINUS     &none        &none        &none  
                        >;
                };
        };
};
